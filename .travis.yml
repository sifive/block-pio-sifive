# The following is a high level description of the build, since there are a
# number of moving pieces, including juggling multiple Docker images and mounted
# volumes.
#
# 1. Run Wit (in the Wit Docker container) to fetch packages and set up
#    workspace. The workspace is initialized in on the host at $WIT_WORKSPACE.
#    This Git repository is also mounted into the Docker container so that Wit
#    can clone from the repository that Travis CI already cloned instead of
#    cloning from the web again.
# 2. Run Wake commands (in the blockci Docker container) with $WIT_WORKSPACE
#    mounted inside to actually run CI checks.
#
services:
  - docker

env:
  global:
    BLOCK_REPO=$TRAVIS_BUILD_DIR
    BLOCKCI_DOCKER_IMAGE=sifive/environment-blockci:0.2.0
    WIT_DOCKER_IMAGE=sifive/wit:0.10.1
    WIT_WORKSPACE=$HOME/workspace

before_install:
  - docker pull "$WIT_DOCKER_IMAGE"
  - docker pull "$BLOCKCI_DOCKER_IMAGE"

install:
  # We have this extra step of setting a global Git configuration to remap
  # GitHub URLs from the SSH-style git@github.com URLs to HTTP URLs, since we
  # don't want to require having an SSH key and since these Git repositories are
  # all public and do not require authentication.
  - |
    docker run --rm \
      -v "$BLOCK_REPO:/mnt/block-pio-sifive" \
      -v "$WIT_WORKSPACE:/mnt/workspace" \
      --workdir /mnt/workspace \
      "$WIT_DOCKER_IMAGE" \
      bash -c "git config --global url.'https://github.com/'.insteadOf 'git@github.com:' && wit init /mnt/workspace -a /mnt/block-pio-sifive -a git@github.com:sifive/environment-blockci-sifive.git::0.2.0"

jobs:
  include:
    - name: "Run with internet"
      script: |
        docker run --rm \
          -v "$WIT_WORKSPACE:/mnt/workspace" \
          --workdir /mnt/workspace \
          "$BLOCKCI_DOCKER_IMAGE" \
          bash -c "wake --init . && wake -v --no-tty runSim pioDUT 2>&1 | (head -n 10000; tail -n 1000) && wake -v --no-tty runSim pio16DUT 2>&1 | (head -n 10000; tail -n 1000)"

    - name: "Run without internet"
      script: |
        docker run --rm \
          --network none \
          -v "$WIT_WORKSPACE:/mnt/workspace" \
          --workdir /mnt/workspace \
          "$BLOCKCI_DOCKER_IMAGE" \
          bash -c "wake --init . && wake -v --no-tty runSim pioDUT 2>&1 | (head -n 10000; tail -n 1000) && wake -v --no-tty runSim pio16DUT 2>&1 | (head -n 10000; tail -n 1000)"
